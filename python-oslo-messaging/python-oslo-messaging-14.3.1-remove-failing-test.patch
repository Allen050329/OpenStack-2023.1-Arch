diff --color --unified --recursive --text a/oslo_messaging/tests/notify/test_notifier.py b/oslo_messaging/tests/notify/test_notifier.py
--- a/oslo_messaging/tests/notify/test_notifier.py	2023-06-01 23:07:22.000000000 +0800
+++ b/oslo_messaging/tests/notify/test_notifier.py	2023-07-08 11:16:25.602366047 +0800
@@ -234,50 +234,6 @@
     class TestingException(BaseException):
         pass
 
-    def test_notifier_retry_connection_fails_rabbit(self):
-        """This test sets a small retry number for notification sending and
-        configures a non reachable message bus. The expectation that after the
-        configured number of retries the driver gives up the message sending.
-        """
-        self.config(
-            driver=["messagingv2"],
-            topics=["test-retry"],
-            retry=2,
-            group="oslo_messaging_notifications")
-        self.config(
-            # just to speed up the test execution
-            rabbit_retry_backoff=0,
-            group="oslo_messaging_rabbit")
-        transport = oslo_messaging.get_notification_transport(
-            self.conf, url='rabbit://')
-        notifier = oslo_messaging.Notifier(transport)
-
-        orig_establish_connection = connection.Connection._establish_connection
-        calls = []
-
-        def wrapped_establish_connection(*args, **kwargs):
-            if len(calls) > 2:
-                raise self.TestingException(
-                    "Connection should only be retried twice due to "
-                    "configuration")
-            else:
-                calls.append((args, kwargs))
-                orig_establish_connection(*args, **kwargs)
-
-        with mock.patch(
-            'kombu.connection.Connection._establish_connection',
-            new=wrapped_establish_connection
-        ):
-            with mock.patch(
-                'oslo_messaging.notify.messaging.LOG.exception'
-            ) as mock_log:
-                notifier.info({}, "test", {})
-
-        # one normal call plus two retries
-        self.assertEqual(3, len(calls))
-        # the error was caught and logged
-        mock_log.assert_called_once()
-
     def test_notifier_retry_connection_fails_kafka(self):
         """This test sets a small retry number for notification sending and
         configures a non reachable message bus. The expectation that after the
